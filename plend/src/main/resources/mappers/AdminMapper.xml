<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="three.people.mapper.adminMapper">
	
	<select id="userList" parameterType="SearchVO" resultType="UserVO">
		SELECT uidx,
			   id,
			   password,
			   name,
			   nickname,
			   birth,
			   userphone,
			   email,
			   gender,
			   addr,
			   regnum,
			   role,
			   delyn,
			   jdate
		  FROM user
		 WHERE role = #{role}
		 <if test="role == 2">
		 	<include refid="searchUser"></include> 
		 </if>
		 <if test="role == 3">
		 	<include refid="searchEnter"></include>
		 </if>
	 	 LIMIT #{start}, #{cntPerPage}
	</select>
	
	<sql id="searchUser">
		<if test="searchType != null">
			<if test='searchType.equals("name")'>
		   		AND (name LIKE CONCAT('%',#{searchValue},'%'))
		 	</if>
		 	<if test='searchType.equals("id")'>
		   		AND (id LIKE CONCAT('%',#{searchValue},'%'))
		 	</if>		
		</if>
	</sql>
	<sql id="searchEnter">
		<if test="searchType != null">
			<if test='searchType.equals("name")'>
		   		AND (name LIKE CONCAT('%',#{searchValue},'%'))
		 	</if>
		 	<if test='searchType.equals("nickName")'>
		   		AND (nickname LIKE CONCAT('%',#{searchValue},'%'))
		 	</if>		
		</if>
	</sql>
	<select id="userOne" parameterType="UserVO" resultType="UserVO">
		SELECT uidx,
			   id,
			   password,
			   name,
			   nickname,
			   birth,
			   userphone,
			   email,
			   gender,
			   addr,
			   regnum,
			   role,
			   delyn,
			   jdate
		  FROM user
		 WHERE uidx = #{uidx} 
	</select> 
	
	<!-- 07.15 김영민: 유저 정보수정하기 --> 
	<update id="userInfo" parameterType="UserVO">
		UPDATE user
		   SET id = #{id},
		       password = #{password},
		       name = #{name},
		       email = #{email},
		       addr = #{addr},
		       nickname = #{nickName},
		       userphone = #{userPhone},
	       <if test="role == 2">
		       birth = #{birth}
	       </if>
	       <if test="role == 3">
		       regnum = #{regnum}
	       </if>
		 WHERE uidx = #{uidx}      
	</update>
	<!-- 07.15 김영민: 업체 삭제 -->
	<update id="enterDelete" parameterType="UserVO">
		UPDATE user
		   SET delyn = 'Y'
	     WHERE uidx = #{uidx}
	</update>
	<!-- 07.15 김영민: 해당하는 업체 리스트 -->
	<select id="enterPlace" parameterType="UserVO" resultType="PlaceVO">
		SELECT placename
		  FROM place
		 WHERE uidx = #{uidx}
	</select>
	<!-- 07.16 김영민: 업체 장소 승인여부 리스트 -->
	<select id="approvalPlace" parameterType="SearchVO" resultType="PlaceVO">
		SELECT u.uidx,
			   u.id,
			   u.name,
			   u.nickname,
			   u.userphone,
			   u.email,
			   u.addr,
			   u.regnum,
			   u.role,
			   u.delyn,
			   u.jdate,
			   p.pidx,
			   p.category,
			   p.placeName,
			   p.eventYN,
			   p.placeDetail,
			   p.guide,
			   p.tag,
			   p.placeImg,
			   p.address,
			   p.option1,
			   p.option2,
			   p.price,
			   p.delYN,
			   p.approvalYN,
			   p.intervalTime,
			   p.availTimeValue
		  FROM user u
		  JOIN place p
		    ON u.uidx = p.uidx
		    <if test="searchType != null">
				<if test='searchType.equals("name")'>
			   		WHERE (u.name LIKE CONCAT('%',#{searchValue},'%'))
			 	</if>
			 	<if test='searchType.equals("nickName")'>
			   		WHERE (u.nickname LIKE CONCAT('%',#{searchValue},'%'))
			 	</if>		
			</if>
   	  ORDER BY p.pidx DESC
		 LIMIT #{start}, #{cntPerPage}
	</select>
	<!-- 07.16 김영민: 업체 장소 리스트 총 갯수 -->
	<select id="totalPlace" parameterType="SearchVO" resultType="Integer">
		SELECT count(*)
		  FROM user u
		  JOIN place p
		    ON u.uidx = p.uidx
		  <if test="searchType != null">
			<if test='searchType.equals("name")'>
		   		WHERE (u.name LIKE CONCAT('%',#{searchValue},'%'))
		 	</if>
		 	<if test='searchType.equals("nickName")'>
		   		WHERE (u.nickname LIKE CONCAT('%',#{searchValue},'%'))
		 	</if>		
		  </if> 
	</select>
	<!-- 07.18 김영민: 업체 장소 승인 업데이트 -->
	<update id="approvalYN" parameterType="PlaceVO">
		UPDATE place
		   SET approvalyn = #{approvalYN}
	     WHERE pidx = #{pidx}
	</update>
	<!-- 07.18 김영민: 이벤트 등록/ 이벤트 이미지 등록 -->
	<insert id="insertEvent" parameterType="EventVO">
		INSERT INTO event(
				    title,
				    semititle,
				    content,
				    conditions,
				    edate,
				    startend,
				    category	
		)VALUES(
					#{title},
					#{semiTitle},
					#{content},
					#{conditions},
					#{edate},
					#{startEnd},
					#{category}
		)
		<selectKey resultType="int" keyProperty="eidx" order="AFTER">
			SELECT max(eidx) FROM event
		</selectKey>
	</insert>
	<insert id="eventImg" parameterType="ImageVO">
		INSERT INTO image(
					eidx,
					path,
					originfilename,
					realfilename
		)VALUES(
					#{eidx},
					#{path},
					#{originFileName},
					#{realFileName}
		)
	</insert>
	<!-- 07.18 김영민: 이벤트 불러오기/ 이벤트 게시글 총 갯수 -->
	<select id="eventList" parameterType="SearchVO" resultType="EventVO">
		SELECT e.eidx,
			   e.title,
			   e.semititle,
			   e.content,
			   e.conditions,
			   e.edate,
			   e.startend,
			   e.eventimg,
			   e.category
		  FROM event e
	 LEFT JOIN image i
		    ON e.eidx = i.eidx
	  ORDER BY e.eidx DESC	    
         LIMIT #{start}, #{cntPerPage} 
	</select>
	<select id="totalEvent" resultType="Integer">
		SELECT count(*)
		  FROM event
	</select>
	<!-- 07.19 김영민: 한 이벤트 정보 가져오기 -->
	<select id="eventOne" parameterType="EventVO" resultType="EventVO">
		SELECT eidx,
			   title,
			   semititle,
			   content,
			   conditions,
			   edate,
			   startend,
			   eventimg,
			   category
		  FROM event
		 WHERE eidx = #{eidx}
	</select>
	<!-- 07.19 이벤트 수정 -->
	<update id="updateEvent" parameterType="EventVO">
		UPDATE event
		   SET title = #{title},
		   	   semititle = #{semiTitle},
		   	   content = #{content},
		   	   conditions = #{conditions},
		   	   edate = #{edate},
		   	   startend = #{startEnd},
		   	   category = #{category}
		 WHERE eidx  = #{eidx}  
	</update>
	<update id="updateImg" parameterType="ImageVO">
		UPDATE image
		   SET path = #{path},
			   originfilename = #{originFileName},
               realfilename = #{realFileName}
         WHERE eidx = #{eidx}
	</update>
	<!-- img가 있는지 확인 -->
	<select id="checkImg" parameterType="ImageVO" resultType="Integer">
		SELECT count(*)
		  FROM image
		 WHERE eidx = #{eidx}
	</select>
	<!-- 이벤트 삭제 -->
	<delete id="deleteEvent" parameterType="EventVO">
		DELETE FROM event
		      WHERE eidx = #{eidx}
	</delete>
	<!-- 
	<select id="reportList" resultType="ReportVO"></select> 
	<update id="reviewBlind" parameterType="ReviewVO"></update>
	<select id="BlockUser" resultType="BlockVO"></select>
	<update id="eventYN" parameterType="PlaceVO"></update> -->
	
</mapper>



