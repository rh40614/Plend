<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="three.people.mapper.adminMapper">

	<select id="userList" parameterType="SearchVO" resultType="UserVO">
		SELECT @ROWNUM := @ROWNUM + 1 AS rnum, sub.*
		FROM (SELECT @ROWNUM := 0 )rnum, (
			SELECT uidx,
				   id,
				   password,
				   name,
				   nickname,
				   birth,
				   userphone,
				   email,
				   gender,
				   addr,
				   regnum,
				   role,
				   delyn,
				   jdate
			  FROM user_plend
			 WHERE role = #{role}
			 <if test="role == 2">
			 	<include refid="searchUser"></include>
			 </if>
			 <if test="role == 3">
			 	<include refid="searchEnter"></include>
			 </if>
		 ORDER BY uidx ASC) sub
		 ORDER BY rnum DESC
	 	 LIMIT #{start}, #{cntPerPage}
	</select>

	<sql id="searchUser">
		<if test="searchType != null">
			<if test='searchType.equals("name")'>
		   		AND (name LIKE CONCAT('%',#{searchValue},'%'))
		 	</if>
		 	<if test='searchType.equals("id")'>
		   		AND (id LIKE CONCAT('%',#{searchValue},'%'))
		 	</if>
		</if>
	</sql>
	<sql id="searchEnter">
		<if test="searchType != null">
			<if test='searchType.equals("name")'>
		   		AND (name LIKE CONCAT('%',#{searchValue},'%'))
		 	</if>
		 	<if test='searchType.equals("nickName")'>
		   		AND (nickname LIKE CONCAT('%',#{searchValue},'%'))
		 	</if>
		</if>
	</sql>
	<select id="userOne" parameterType="UserVO" resultType="UserVO">
		SELECT uidx,
			   id,
			   password,
			   name,
			   nickname,
			   birth,
			   userphone,
			   email,
			   gender,
			   addr,
			   regnum,
			   role,
			   delyn,
			   jdate
		  FROM user_plend
		 WHERE uidx = #{uidx}
	</select>

	<!-- 07.15 김영민: 유저 정보수정하기 -->
	<update id="userInfo" parameterType="UserVO">
		UPDATE user_plend
		   SET id = #{id},
		       password = #{password},
		       name = #{name},
		       email = #{email},
		       addr = #{addr},
		       nickname = #{nickName},
		       userphone = #{userPhone},
	       <if test="role == 2">
		       birth = #{birth}
	       </if>
	       <if test="role == 3">
		       regnum = #{regnum}
	       </if>
		 WHERE uidx = #{uidx}
	</update>
	<!-- 07.15 김영민: 업체 삭제 -->
	<update id="enterDelete" parameterType="UserVO">
		UPDATE user_plend
		   SET delyn = 'Y'
	     WHERE uidx = #{uidx}
	</update>
	<!-- 07.15 김영민: 해당하는 업체 리스트 -->
	<select id="enterPlace" parameterType="UserVO" resultType="PlaceVO">
		SELECT placename
		  FROM place
		 WHERE uidx = #{uidx}
	</select>
	<!-- 07.16 김영민: 업체 장소 승인여부 리스트 -->
	<select id="approvalPlace" parameterType="SearchVO" resultType="PlaceVO">
		SELECT @ROWNUM := @ROWNUM + 1 AS rnum, sub.*
		FROM (SELECT @ROWNUM := 0 )rnum, (
			SELECT u.uidx,
			   u.id,
			   u.name,
			   u.nickname,
			   u.userphone,
			   u.email,
			   u.addr,
			   u.regnum,
			   u.role,
			   u.jdate,
			   p.pidx,
			   p.category,
			   p.placeName,
			   p.eventYN,
			   p.placeDetail,
			   p.guide,
			   p.tag,
			   p.placeImg,
			   p.address,
			   p.option1,
			   p.option2,
			   p.price,
			   p.delYN,
			   p.approvalYN,
			   p.intervalTime,
			   p.availTimeValue
		  FROM user_plend u
		  JOIN place p
		    ON u.uidx = p.uidx
		 WHERE p.delyn = 'N'
		    <if test="searchType != null">
				<if test='searchType.equals("name")'>
			   		AND (u.name LIKE CONCAT('%',#{searchValue},'%'))
			 	</if>
			 	<if test='searchType.equals("nickName")'>
			   		AND (u.nickname LIKE CONCAT('%',#{searchValue},'%'))
			 	</if>
			</if>
	  ORDER BY p.pidx DESC) sub
   	  ORDER BY rnum DESC
		 LIMIT #{start}, #{cntPerPage}
	</select>
	<!-- 07.16 김영민: 업체 장소 리스트 총 갯수 -->
	<select id="totalPlace" parameterType="SearchVO" resultType="Integer">
		SELECT count(*)
		  FROM user_plend u
		  JOIN place p
		    ON u.uidx = p.uidx
		 WHERE p.delyn = 'N'
		  <if test="searchType != null">
			<if test='searchType.equals("name")'>
		   		AND (u.name LIKE CONCAT('%',#{searchValue},'%'))
		 	</if>
		 	<if test='searchType.equals("nickName")'>
		   		AND (u.nickname LIKE CONCAT('%',#{searchValue},'%'))
		 	</if>
		  </if>
	</select>
	<!-- 07.18 김영민: 업체 장소 승인 업데이트 -->
	<update id="approvalYN" parameterType="PlaceVO">
		UPDATE place
		   SET approvalyn = #{approvalYN}
	     WHERE pidx = #{pidx}
	</update>
	<!-- 07.18 김영민: 이벤트 등록/ 이벤트 이미지 등록 -->
	<insert id="insertEvent" parameterType="EventVO">
		INSERT INTO event(
				    title,
				    semititle,
				    content,
				    conditions,
				    edate,
				    startend,
				    category
		)VALUES(
					#{title},
					#{semiTitle},
					#{content},
					#{conditions},
					#{edate},
					#{startEnd},
					#{category}
		)
		<selectKey resultType="int" keyProperty="eidx" order="AFTER">
			SELECT max(eidx) FROM event
		</selectKey>
	</insert>
	<insert id="eventImg" parameterType="ImageVO">
		INSERT INTO image(
					eidx,
					path,
					originfilename,
					realfilename
		)VALUES(
					#{eidx},
					#{path},
					#{originFileName},
					#{realFileName}
		)
	</insert>
	<!-- 07.18 김영민: 이벤트 불러오기/ 이벤트 게시글 총 갯수 -->
	<select id="eventList" parameterType="SearchVO" resultType="EventVO">
		SELECT @ROWNUM := @ROWNUM + 1 AS rnum, sub.*
		FROM (SELECT @ROWNUM := 0 )rnum, (
			SELECT e.eidx,
				   e.title,
				   e.semititle,
				   e.content,
				   e.conditions,
				   e.edate,
				   e.startend,
				   e.eventimg,
				   e.category,
				   e.delyn
			  FROM event e
		  ORDER BY e.eidx ASC) sub
		  ORDER BY rnum DESC
         LIMIT #{start}, #{cntPerPage}
	</select>
	<select id="totalEvent" resultType="Integer">
		SELECT count(*)
		  FROM event
	</select>
	<!-- 07.19 김영민: 한 이벤트 정보 가져오기 -->
	<select id="eventOne" parameterType="EventVO" resultType="EventVO">
		SELECT eidx,
			   title,
			   semititle,
			   content,
			   conditions,
			   edate,
			   startend,
			   eventimg,
			   category,
			   delyn
		  FROM event
		 WHERE eidx = #{eidx}
	</select>
	<!-- 07.19 이벤트 수정 -->
	<update id="updateEvent" parameterType="EventVO">
		UPDATE event
		   SET title = #{title},
		   	   semititle = #{semiTitle},
		   	   content = #{content},
		   	   conditions = #{conditions},
		   	   edate = #{edate},
		   	   startend = #{startEnd},
		   	   category = #{category}
		 WHERE eidx  = #{eidx}
	</update>
	<update id="updateImg" parameterType="ImageVO">
		UPDATE image
		   SET path = #{path},
			   originfilename = #{originFileName},
               realfilename = #{realFileName}
         WHERE eidx = #{eidx}
	</update>
	<!-- 이벤트 수정시 이전 이벤트 이미지 삭제 -->
	<delete id="deleteEventImg" parameterType="ImageVO">
		DELETE FROM image
		      WHERE eidx = #{eidx};
	</delete>
	<!-- img가 있는지 확인 -->
	<select id="checkImg" parameterType="ImageVO" resultType="Integer">
		SELECT count(*)
		  FROM image
		 WHERE eidx = #{eidx}
	</select>
	<!-- 이벤트 삭제 -->
	<update id="deleteEvent" parameterType="EventVO">
		UPDATE event
		   SET delyn = 'Y'
		 WHERE eidx = #{eidx}
	</update>
	<!-- 07.25 김영민: 이벤트 등록 후 장소에 이벤트 설정 뿌려주기 -->
	<update id="placeEventUpdate" parameterType="EventVO">
		UPDATE place
		   SET eventyn = 'Y'
		 WHERE category = #{category}
	</update>
	<!-- 07.25 김영민: 이벤트 미진행일 경우 장소 이벤트 컬럼 변경 -->
	<update id="placeEventDone" parameterType="EventVO">
		UPDATE place
		   SET eventyn = 'N'
		 WHERE category = #{category}
	</update>

	<!-- 08.09 김영민: 리뷰 신고 내역 불러오기 -->
	<select id="reportList" resultType="ReportVO" parameterType="SearchVO">
		SELECT @ROWNUM := @ROWNUM + 1 AS rnum, sub.*
		FROM (SELECT @ROWNUM := 0 )rnum, (
			SELECT r.rbidx,
				   r.rvidx,
				   r.category,
				   r.content,
				   r.date,
				   r.reporter_uidx,
				   r.respondent_uidx,
				   r.delyn,
				   u.uidx,
				   u.id,
				   u.name,
				   u.nickname,
				   p.pidx
		      FROM report r
		      JOIN user_plend u
		        ON r.respondent_uidx = u.uidx
	          JOIN review p
	            ON r.rvidx = p.rvidx
		        <if test="searchType != null">
					<if test='searchType.equals("name")'>
				   		WHERE (u.name LIKE CONCAT('%',#{searchValue},'%'))
				 	</if>
				 	<if test='searchType.equals("category")'>
				   		WHERE (r.category LIKE CONCAT('%',#{searchValue},'%'))
				 	</if>
			    </if>
	      ORDER BY rbidx DESC) sub
	      ORDER BY rnum DESC
         LIMIT #{start}, #{cntPerPage}
	</select>
	<!-- 리뷰갯수 가져오기 -->
	<select id="countReport" parameterType="SearchVO" resultType="int">
		SELECT COUNT(*)
		  FROM report r
		  JOIN user_plend u
		    ON r.respondent_uidx = u.uidx
		  <if test="searchType != null">
			<if test='searchType.equals("name")'>
		   		WHERE (u.name LIKE CONCAT('%',#{searchValue},'%'))
		 	</if>
		 	<if test='searchType.equals("category")'>
		   		WHERE (r.category LIKE CONCAT('%',#{searchValue},'%'))
		 	</if>
	    </if>
	</select>
	<!-- 리뷰, 신고 삭제처리 -->
	<update id="reviewBlind" parameterType="ReportVO">
		UPDATE review
		   SET delyn = 'Y'
		 WHERE rvidx = #{rvidx}
	</update>
	<update id="reportBlind" parameterType="ReportVO">
		UPDATE report
		   SET delyn = 'Y'
		 WHERE rbidx = #{rbidx}
	</update>

	<!-- 08.10 김영민: 업체별 블랙리스트 불러오기 -->
	<select id="blockUser" resultType="BlockVO" parameterType="HashMap">
		SELECT @ROWNUM := @ROWNUM + 1 AS rnum, sub.*
		FROM (SELECT @ROWNUM := 0 )rnum, (
			SELECT b.rbidx,
				   b.category,
				   b.content,
				   b.date,
				   b.bdelyn,
				   u.uidx,
				   u.name,
				   u.delyn
			  FROM block b
			  JOIN user_plend u
			    ON b.reporter_uidx = u.uidx
			 WHERE uidx = #{blockVO.uidx}
			   AND b.bdelyn = 'N') sub
		 ORDER BY rnum DESC
		 LIMIT #{searchVO.start}, #{searchVO.cntPerPage}
	</select>
	<!-- 블랙리스트 갯수 -->
	<select id="countBlockUser" resultType="int" parameterType="BlockVO">
		SELECT COUNT(*)
		  FROM block b
		  JOIN user_plend u
		    ON b.reporter_uidx = u.uidx
		 WHERE uidx = #{uidx}
	</select>
	<!-- 블랙리스트 삭제 -->
	<update id="blockDelete" parameterType="BlockVO" >
		UPDATE block
		   SET bdelyn = 'Y'
		 WHERE rbidx = #{rbidx}
	</update>
	<!-- 08.26 김하진 업체 추가옵션  -->
	<select id="Option" parameterType = "SearchVO" resultType ="PlaceVO">
		SELECT @ROWNUM := @ROWNUM + 1 AS rnum, sub.*
		FROM (SELECT @ROWNUM := 0 )rnum, (
			 SELECT
			 	    pidx
			 	   ,option2
			 	   ,b.name
			   FROM place a
		 INNER JOIN user_plend b
		 		 ON a.uidx = b.uidx
		 	  WHERE option2 not in('')
		 		 <include refid="search"></include>) sub
		   ORDER BY rnum DESC
		      LIMIT #{start}, #{cntPerPage}
	</select>
	<sql id="search">
		<if test="searchType != null">
			<if test='searchType.equals("name")'>
		   		AND (name LIKE CONCAT('%',#{searchValue},'%'))
		 	</if>
		 	<if test='searchType.equals("option2")'>
		   		AND (option2 LIKE CONCAT('%',#{searchValue},'%'))
		 	</if>
		</if>
	</sql>
	<select id="totalOption" resultType = "int">
		SELECT count(*)
		  FROM place
		 WHERE option2 not in('')
	</select>
  <!-- 이벤트 시작기간 지나면 자동으로 진행으로 바꾸기 -->
  <select id="checkEventStartDate" resultType="EventVO">
    <![CDATA[
    SELECT eidx,
           title,
           semititle,
           content,
           conditions,
           edate,
           startend,
           eventimg,
           category
      FROM event
     WHERE SUBSTRING(edate,1,10) <= NOW()
       AND SUBSTRING(edate,15,10) >= NOW()
       AND startend = 'end'
    ]]>
  </select>
</mapper>
